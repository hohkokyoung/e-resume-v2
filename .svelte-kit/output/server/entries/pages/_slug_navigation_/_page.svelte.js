import { c as create_ssr_component, s as subscribe, d as each, a as add_attribute, e as escape } from "../../../chunks/ssr.js";
import { C as CrossIcon } from "../../../chunks/cross.js";
import { p as page } from "../../../chunks/stores.js";
const ExpandIcon = "data:image/svg+xml,%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3c!--%20Uploaded%20to:%20SVG%20Repo,%20www.svgrepo.com,%20Transformed%20by:%20SVG%20Repo%20Mixer%20Tools%20--%3e%3csvg%20width='800px'%20height='800px'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20id='SVGRepo_bgCarrier'%20stroke-width='0'/%3e%3cg%20id='SVGRepo_tracerCarrier'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cg%20id='SVGRepo_iconCarrier'%3e%3cpath%20d='M15%209L21%203M21%203H15M21%203V9M9%209L3%203M3%203L3%209M3%203L9%203M9%2015L3%2021M3%2021H9M3%2021L3%2015M15%2015L21%2021M21%2021V15M21%2021H15'%20stroke='%23F8B465'%20stroke-width='2'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3c/g%3e%3c/svg%3e";
const CertificateIcon = "data:image/svg+xml,%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3c!--%20Uploaded%20to:%20SVG%20Repo,%20www.svgrepo.com,%20Transformed%20by:%20SVG%20Repo%20Mixer%20Tools%20--%3e%3csvg%20width='800px'%20height='800px'%20viewBox='0%200%2024%2024'%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20fill='%23000000'%3e%3cg%20id='SVGRepo_bgCarrier'%20stroke-width='0'/%3e%3cg%20id='SVGRepo_tracerCarrier'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cg%20id='SVGRepo_iconCarrier'%3e%3ctitle%3ecertificate_line%3c/title%3e%3cg%20id='页面-1'%20stroke='none'%20stroke-width='1'%20fill='none'%20fill-rule='evenodd'%3e%3cg%20id='Education'%20transform='translate(-864.000000,%200.000000)'%20fill-rule='nonzero'%3e%3cg%20id='certificate_line'%20transform='translate(864.000000,%200.000000)'%3e%3cpath%20d='M24,0%20L24,24%20L0,24%20L0,0%20L24,0%20Z%20M12.5934901,23.257841%20L12.5819402,23.2595131%20L12.5108777,23.2950439%20L12.4918791,23.2987469%20L12.4918791,23.2987469%20L12.4767152,23.2950439%20L12.4056548,23.2595131%20C12.3958229,23.2563662%2012.3870493,23.2590235%2012.3821421,23.2649074%20L12.3780323,23.275831%20L12.360941,23.7031097%20L12.3658947,23.7234994%20L12.3769048,23.7357139%20L12.4804777,23.8096931%20L12.4953491,23.8136134%20L12.4953491,23.8136134%20L12.5071152,23.8096931%20L12.6106902,23.7357139%20L12.6232938,23.7196733%20L12.6232938,23.7196733%20L12.6266527,23.7031097%20L12.609561,23.275831%20C12.6075724,23.2657013%2012.6010112,23.2592993%2012.5934901,23.257841%20L12.5934901,23.257841%20Z%20M12.8583906,23.1452862%20L12.8445485,23.1473072%20L12.6598443,23.2396597%20L12.6498822,23.2499052%20L12.6498822,23.2499052%20L12.6471943,23.2611114%20L12.6650943,23.6906389%20L12.6699349,23.7034178%20L12.6699349,23.7034178%20L12.678386,23.7104931%20L12.8793402,23.8032389%20C12.8914285,23.8068999%2012.9022333,23.8029875%2012.9078286,23.7952264%20L12.9118235,23.7811639%20L12.8776777,23.1665331%20C12.8752882,23.1545897%2012.8674102,23.1470016%2012.8583906,23.1452862%20L12.8583906,23.1452862%20Z%20M12.1430473,23.1473072%20C12.1332178,23.1423925%2012.1221763,23.1452606%2012.1156365,23.1525954%20L12.1099173,23.1665331%20L12.0757714,23.7811639%20C12.0751323,23.7926639%2012.0828099,23.8018602%2012.0926481,23.8045676%20L12.108256,23.8032389%20L12.3092106,23.7104931%20L12.3186497,23.7024347%20L12.3186497,23.7024347%20L12.3225043,23.6906389%20L12.340401,23.2611114%20L12.337245,23.2485176%20L12.337245,23.2485176%20L12.3277531,23.2396597%20L12.1430473,23.1473072%20Z'%20id='MingCute'%20fill-rule='nonzero'%3e%3c/path%3e%3cpath%20d='M18,10%20C20.2091,10%2022,11.7909%2022,14%20C22,15.0144%2021.6224,15.9407%2021,16.6458%20L21,20.8382%20C21,21.6559%2020.1395,22.1878%2019.4081,21.8221%20L18,21.118%20L16.5919,21.8221%20C15.8605,22.1878%2015,21.6559%2015,20.8382%20L15,16.6458%20C14.3776,15.9407%2014,15.0144%2014,14%20C14,11.7909%2015.7909,10%2018,10%20Z%20M20,4%20C21.1046,4%2022,4.89543%2022,6%20L22,8%20C22,8.55228%2021.5523,9%2021,9%20C20.4477,9%2020,8.55228%2020,8%20L20,6%20L4,6%20L4,18%20L12,18%20C12.5523,18%2013,18.4477%2013,19%20C13,19.5523%2012.5523,20%2012,20%20L4,20%20C2.89543,20%202,19.1046%202,18%20L2,6%20C2,4.89543%202.89543,4%204,4%20L20,4%20Z%20M19,17.874%20C18.6804,17.9562%2018.3453,18%2018,18%20C17.6547,18%2017.3196,17.9562%2017,17.874%20L17,19.382%20L17.5528,19.1056%20C17.8343,18.9648%2018.1657,18.9648%2018.4472,19.1056%20L19,19.382%20L19,17.874%20Z%20M18,12%20C16.8954,12%2016,12.8954%2016,14%20C16,15.1046%2016.8954,16%2018,16%20C19.1046,16%2020,15.1046%2020,14%20C20,12.8954%2019.1046,12%2018,12%20Z%20M9,13%20C9.55228,13%2010,13.4477%2010,14%20C10,14.51285%209.61395571,14.9355092%209.11662025,14.9932725%20L9,15%20L7,15%20C6.44772,15%206,14.5523%206,14%20C6,13.48715%206.38604429,13.0644908%206.88337975,13.0067275%20L7,13%20L9,13%20Z%20M13,9%20C13.5523,9%2014,9.44772%2014,10%20C14,10.5523%2013.5523,11%2013,11%20L7,11%20C6.44772,11%206,10.5523%206,10%20C6,9.44772%206.44772,9%207,9%20L13,9%20Z'%20id='形状'%20fill='%23F8B465'%3e%3c/path%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/svg%3e";
const ArrowLeftIcon = "data:image/svg+xml,%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3c!--%20Uploaded%20to:%20SVG%20Repo,%20www.svgrepo.com,%20Transformed%20by:%20SVG%20Repo%20Mixer%20Tools%20--%3e%3csvg%20width='800px'%20height='800px'%20viewBox='0%200%201024%201024'%20class='icon'%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%20fill='%23000000'%3e%3cg%20id='SVGRepo_bgCarrier'%20stroke-width='0'/%3e%3cg%20id='SVGRepo_tracerCarrier'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cg%20id='SVGRepo_iconCarrier'%3e%3cpath%20d='M768%20903.232l-50.432%2056.768L256%20512l461.568-448%2050.432%2056.768L364.928%20512z'%20fill='%23F8B465'/%3e%3c/g%3e%3c/svg%3e";
const ArrowRightIcon = "data:image/svg+xml,%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3c!--%20Uploaded%20to:%20SVG%20Repo,%20www.svgrepo.com,%20Transformed%20by:%20SVG%20Repo%20Mixer%20Tools%20--%3e%3csvg%20width='800px'%20height='800px'%20viewBox='0%200%201024%201024'%20class='icon'%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%20fill='%23F8B465'%20stroke='%23F8B465'%3e%3cg%20id='SVGRepo_bgCarrier'%20stroke-width='0'/%3e%3cg%20id='SVGRepo_tracerCarrier'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cg%20id='SVGRepo_iconCarrier'%3e%3cpath%20d='M256%20120.768L306.432%2064%20768%20512l-461.568%20448L256%20903.232%20659.072%20512z'%20fill='%23F8B465'/%3e%3c/g%3e%3c/svg%3e";
const css = {
  code: "@import './default.css';",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\r\\n    import ExpandIcon from \\"$lib/icons/expand-carousel.svg\\";\\r\\n    import CertificateIcon from \\"$lib/icons/certificate.svg\\";\\r\\n    import CrossIcon from \\"$lib/icons/cross.svg\\";\\r\\n    import ArrowLeftIcon from \\"$lib/icons/arrow-left.svg\\";\\r\\n    import ArrowRightIcon from \\"$lib/icons/arrow-right.svg\\";\\r\\n    import { beforeUpdate, afterUpdate, onMount } from 'svelte';\\r\\n    import { page } from '$app/stores';\\r\\n\\r\\n    var isMobile;\\r\\n    var splide, modalSplide, modalThumbnailSplide;\\r\\n\\r\\n    function checkOverflowAndApplyMargin() {\\r\\n        const chapterContentListContainer = document.getElementById('chapterContentListContainer');\\r\\n        const chapterSummaryContainer = document.getElementById('chapterSummaryContainer');\\r\\n        const chapterListContainer = document.getElementById('chapterListContainer');\\r\\n\\r\\n        if (!isMobile.matches) {\\r\\n            if (chapterContentListContainer.scrollHeight > chapterContentListContainer.clientHeight || chapterContentListContainer.scrollWidth > chapterContentListContainer.clientWidth) {\\r\\n                updateNodeMarginRight(chapterSummaryContainer, \\"3rem\\");\\r\\n                updateNodeMarginRight(chapterListContainer, \\"3rem\\");\\r\\n            } else {\\r\\n                updateNodeMarginRight(chapterSummaryContainer, \\"0\\");\\r\\n                updateNodeMarginRight(chapterListContainer, \\"0\\");\\r\\n            }\\r\\n        } else {\\r\\n            updateNodeMarginRight(chapterSummaryContainer, \\"0\\");\\r\\n            updateNodeMarginRight(chapterListContainer, \\"0\\");\\r\\n        }\\r\\n    }   \\r\\n\\r\\n    function updateNodeMarginRight(node, value) {\\r\\n        if (node) {\\r\\n            node.style.marginRight = value\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function handleSplide() {\\r\\n        try {\\r\\n            splide = new Splide(\\".image-carousel-splide\\", {\\r\\n                pagination: false,\\r\\n                arrows: false,\\r\\n                breakpoints: {\\r\\n                    600: {\\r\\n                        perPage: 3,\\r\\n                        gap: 20,\\r\\n                        fixedHeight: 60,\\r\\n                    },\\r\\n                    1024: {\\r\\n                        perPage: 3,\\r\\n                        gap: 20,\\r\\n                        fixedHeight: 100,\\r\\n                    }\\r\\n                }\\r\\n            });\\r\\n\\r\\n            modalSplide = new Splide(\\".modal-splide\\", {\\r\\n                perPage: 1,\\r\\n                pagination: false,\\r\\n                arrows: false,\\r\\n            });\\r\\n\\r\\n            modalThumbnailSplide = new Splide(\\".modal-thumbnail-splide\\", {\\r\\n                fixedWidth : 100,\\r\\n                fixedHeight: 60,\\r\\n                gap: 10,\\r\\n                rewind: false,\\r\\n                pagination: false,\\r\\n                isNavigation: true,\\r\\n            });\\r\\n            \\r\\n            splide.sync(modalSplide);\\r\\n            splide.sync(modalThumbnailSplide);\\r\\n            splide.mount();\\r\\n            modalSplide.mount();\\r\\n            modalThumbnailSplide.mount();\\r\\n        } catch(error) {}\\r\\n    }\\r\\n\\r\\n    onMount(() => {\\r\\n        isMobile = window.matchMedia(\\"only screen and (max-width: 1024px)\\");\\r\\n\\r\\n        window.addEventListener(\\"resize\\", checkOverflowAndApplyMargin);\\r\\n\\r\\n        return(() => {\\r\\n            window.removeEventListener(\\"resize\\", checkOverflowAndApplyMargin);\\r\\n        });\\r\\n    })\\r\\n\\r\\n    beforeUpdate(() => {\\r\\n        // isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\\r\\n    });\\r\\n\\r\\n    afterUpdate(() => {\\r\\n        checkOverflowAndApplyMargin();\\r\\n\\r\\n        handleSplide();\\r\\n    });\\r\\n\\r\\n    function openModal(index) {\\r\\n        if (index) modalSplide.go(index);\\r\\n        \\r\\n        var modal = document.getElementById(\\"modal\\");\\r\\n        modal.style.opacity = 1;\\r\\n        modal.style.zIndex = 1;\\r\\n    }\\r\\n\\r\\n    function closeModal() {\\r\\n        var modal = document.getElementById(\\"modal\\");\\r\\n        modal.style.opacity = 0;\\r\\n        modal.style.zIndex = -1;\\r\\n    }\\r\\n\\r\\n\\texport let data;\\r\\n<\/script>\\r\\n\\r\\n<section class=\\"chapter\\">\\r\\n    <div class=\\"chapter-image-container\\">\\r\\n        <div>\\r\\n            {#if data.chapter.content.images.length > 1}\\r\\n            <div class=\\"splide image-carousel-splide\\" role=\\"group\\" aria-label=\\"Splide Basic HTML Example\\">\\r\\n                <div class=\\"splide__track\\">\\r\\n                      <div class=\\"splide__list\\">\\r\\n                        {#each data.chapter.content.images as image, index}\\r\\n                            <button type=\\"button\\" on:click={() => isMobile.matches && openModal(index)} class=\\"splide__slide\\">\\r\\n                                <img src={image} alt={data.chapter.slug + \\"-\\" + index + \\" image\\"} />\\r\\n                            </button>\\r\\n                        {/each}\\r\\n                      </div>\\r\\n                </div>\\r\\n                <button type=\\"button\\" on:click={openModal}>\\r\\n                    <img id=\\"expandImageCarousel\\" class=\\"expand-image-carousel\\" src={ExpandIcon} alt=\\"expand carousel icon\\" />\\r\\n                </button>\\r\\n            </div>\\r\\n            {:else}\\r\\n                <img src={data.chapter.content.images[0]} alt={data.chapter.slug + \\" logo\\"} />\\r\\n            {/if}\\r\\n        </div>\\r\\n    </div>\\r\\n    <main class=\\"chapter-content-container\\">\\r\\n        <h1 class=\\"chapter-content-title\\">{data.chapter.content.title}</h1>\\r\\n        {#if data.chapter.content.date !== null}\\r\\n            <h2 class=\\"chapter-content-date\\">{data.chapter.content.date}</h2>\\r\\n        {/if}\\r\\n        {#if data.chapter.content.role !== null}\\r\\n            <h3 class=\\"chapter-content-role\\">{data.chapter.content.role}</h3>\\r\\n        {/if}\\r\\n        <hr class=\\"separator\\" />\\r\\n        <div class=\\"chapter-content-list-container\\" id=\\"chapterContentListContainer\\">\\r\\n            {#if data.chapter.content.category?.slug !== null}\\r\\n                <div class=\\"chapter-category\\">\\r\\n                    <p>Projects</p>\\r\\n                    <span class=\\"chapter-category-dot\\"></span>\\r\\n                    <div class=\\"navigation-bar chapter-category-navigation-bar\\">\\r\\n                        {#each data.chapter.categoryNavigations as chapterCategoryNavigation}\\r\\n                            <a href={$page.url.pathname + \\"?chapterSlug=\\" + data.chapter.slug + \\"&categorySlug=\\" + chapterCategoryNavigation.slug} aria-current={chapterCategoryNavigation.slug === data.chapter.content.category.slug}>{chapterCategoryNavigation.title}</a>\\r\\n                        {/each}\\r\\n                    </div>\\r\\n                </div>\\r\\n            {/if}\\r\\n            {#if data.chapter.content.category?.summary !== undefined}\\r\\n                <div class=\\"chapter-summary\\" id=\\"chapterSummaryContainer\\">\\r\\n                    <p>{data.chapter.content.category.summary}</p>\\r\\n                </div>\\r\\n            {/if}\\r\\n            {#if data.chapter.content.category?.file !== undefined}\\r\\n                <button type=\\"button\\" on:click={openModal} class=\\"chapter-file\\">\\r\\n                    <img src={CertificateIcon} alt=\\"certificate icon\\" />\\r\\n                </button>\\r\\n            {/if}\\r\\n            {#if data.chapter.content.category.lists.length > 0}\\r\\n                <ul class=\\"chapter-list\\" id=\\"chapterListContainer\\">\\r\\n                    {#each data.chapter.content.category.lists as list}\\r\\n                        <li>{list}</li>\\r\\n                    {/each}\\r\\n                </ul>\\r\\n            {/if}\\r\\n        </div>\\r\\n    </main>\\r\\n</section>\\r\\n<div class=\\"navigation-bar chapter-navigation-bar\\">\\r\\n    {#each data.chapter.navigations as chapterNavigation (chapterNavigation.slug)}\\r\\n        <a href={$page.url.pathname + \\"?chapterSlug=\\" + chapterNavigation.slug} aria-current={chapterNavigation.slug === data.chapter.slug}>{chapterNavigation.title}</a>\\r\\n    {/each}\\r\\n</div>\\r\\n\\r\\n<div id=\\"modal\\" class=\\"modal\\">\\r\\n  <div class=\\"modal-content\\">\\r\\n    <button class=\\"close\\" type=\\"button\\" on:click={closeModal}>\\r\\n        <img src={CrossIcon} alt=\\"cross icon\\" />\\r\\n    </button>\\r\\n    {#if data.chapter.content.category?.file}\\r\\n        <div class=\\"modal-certificate\\">\\r\\n            <img src={data.chapter.content.category.file} alt={data.chapter.slug + \\" certificate\\"} />\\r\\n        </div>\\r\\n    {/if}\\r\\n    {#if data.chapter.content.images.length > 1}\\r\\n        <div class=\\"splide modal-splide\\">\\r\\n            <div class=\\"splide__track\\">\\r\\n                <div class=\\"splide__list\\">\\r\\n                    {#each data.chapter.content.images as image, index}\\r\\n                        <img class=\\"splide__slide\\" src={image} alt={data.chapter.slug + \\"-\\" + index + \\" image\\"} />\\r\\n                    {/each}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\"splide modal-thumbnail-splide\\">\\r\\n            <div class=\\"splide__track\\">\\r\\n                <div class=\\"splide__list\\">\\r\\n                    {#each data.chapter.content.images as image, index}\\r\\n                        <img class=\\"splide__slide\\" src={image} alt={data.chapter.slug + \\"-\\" + index + \\" image\\"} />\\r\\n                    {/each}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\"splide__arrows\\">\\r\\n                <button class=\\"splide__arrow splide__arrow--prev\\">\\r\\n                    <img class=\\"arrow-icon\\" src={ArrowLeftIcon} alt=\\"arrow left icon\\" />\\r\\n                </button>\\r\\n                <button class=\\"splide__arrow splide__arrow--next\\">\\r\\n                    <img class=\\"arrow-icon\\" src={ArrowRightIcon} alt=\\"arrow right icon\\" />\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    {/if}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n    @import './default.css';\\r\\n</style>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n"],"names":[],"mappings":"AAoOI,QAAQ,eAAe"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  let { data } = $$props;
  if ($$props.data === void 0 && $$bindings.data && data !== void 0)
    $$bindings.data(data);
  $$result.css.add(css);
  $$unsubscribe_page();
  return `<section class="chapter"><div class="chapter-image-container"><div>${data.chapter.content.images.length > 1 ? `<div class="splide image-carousel-splide" role="group" aria-label="Splide Basic HTML Example"><div class="splide__track"><div class="splide__list">${each(data.chapter.content.images, (image, index) => {
    return `<button type="button" class="splide__slide"><img${add_attribute("src", image, 0)}${add_attribute("alt", data.chapter.slug + "-" + index + " image", 0)}> </button>`;
  })}</div></div> <button type="button" data-svelte-h="svelte-13ex9hc"><img id="expandImageCarousel" class="expand-image-carousel"${add_attribute("src", ExpandIcon, 0)} alt="expand carousel icon"></button></div>` : `<img${add_attribute("src", data.chapter.content.images[0], 0)}${add_attribute("alt", data.chapter.slug + " logo", 0)}>`}</div></div> <main class="chapter-content-container"><h1 class="chapter-content-title">${escape(data.chapter.content.title)}</h1> ${data.chapter.content.date !== null ? `<h2 class="chapter-content-date">${escape(data.chapter.content.date)}</h2>` : ``} ${data.chapter.content.role !== null ? `<h3 class="chapter-content-role">${escape(data.chapter.content.role)}</h3>` : ``} <hr class="separator"> <div class="chapter-content-list-container" id="chapterContentListContainer">${data.chapter.content.category?.slug !== null ? `<div class="chapter-category"><p data-svelte-h="svelte-16led9u">Projects</p> <span class="chapter-category-dot"></span> <div class="navigation-bar chapter-category-navigation-bar">${each(data.chapter.categoryNavigations, (chapterCategoryNavigation) => {
    return `<a${add_attribute("href", $page.url.pathname + "?chapterSlug=" + data.chapter.slug + "&categorySlug=" + chapterCategoryNavigation.slug, 0)}${add_attribute("aria-current", chapterCategoryNavigation.slug === data.chapter.content.category.slug, 0)}>${escape(chapterCategoryNavigation.title)}</a>`;
  })}</div></div>` : ``} ${data.chapter.content.category?.summary !== void 0 ? `<div class="chapter-summary" id="chapterSummaryContainer"><p>${escape(data.chapter.content.category.summary)}</p></div>` : ``} ${data.chapter.content.category?.file !== void 0 ? `<button type="button" class="chapter-file" data-svelte-h="svelte-1gr5nzq"><img${add_attribute("src", CertificateIcon, 0)} alt="certificate icon"></button>` : ``} ${data.chapter.content.category.lists.length > 0 ? `<ul class="chapter-list" id="chapterListContainer">${each(data.chapter.content.category.lists, (list) => {
    return `<li>${escape(list)}</li>`;
  })}</ul>` : ``}</div></main></section> <div class="navigation-bar chapter-navigation-bar">${each(data.chapter.navigations, (chapterNavigation) => {
    return `<a${add_attribute("href", $page.url.pathname + "?chapterSlug=" + chapterNavigation.slug, 0)}${add_attribute("aria-current", chapterNavigation.slug === data.chapter.slug, 0)}>${escape(chapterNavigation.title)}</a>`;
  })}</div> <div id="modal" class="modal"><div class="modal-content"><button class="close" type="button" data-svelte-h="svelte-5lg3sy"><img${add_attribute("src", CrossIcon, 0)} alt="cross icon"></button> ${data.chapter.content.category?.file ? `<div class="modal-certificate"><img${add_attribute("src", data.chapter.content.category.file, 0)}${add_attribute("alt", data.chapter.slug + " certificate", 0)}></div>` : ``} ${data.chapter.content.images.length > 1 ? `<div class="splide modal-splide"><div class="splide__track"><div class="splide__list">${each(data.chapter.content.images, (image, index) => {
    return `<img class="splide__slide"${add_attribute("src", image, 0)}${add_attribute("alt", data.chapter.slug + "-" + index + " image", 0)}>`;
  })}</div></div></div> <div class="splide modal-thumbnail-splide"><div class="splide__track"><div class="splide__list">${each(data.chapter.content.images, (image, index) => {
    return `<img class="splide__slide"${add_attribute("src", image, 0)}${add_attribute("alt", data.chapter.slug + "-" + index + " image", 0)}>`;
  })}</div></div> <div class="splide__arrows" data-svelte-h="svelte-wvnud8"><button class="splide__arrow splide__arrow--prev"><img class="arrow-icon"${add_attribute("src", ArrowLeftIcon, 0)} alt="arrow left icon"></button> <button class="splide__arrow splide__arrow--next"><img class="arrow-icon"${add_attribute("src", ArrowRightIcon, 0)} alt="arrow right icon"></button></div></div>` : ``}</div> </div>`;
});
export {
  Page as default
};
